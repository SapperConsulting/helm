apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.service.name }}
  {{- if .Values.app.annotations }}
  annotations:
  {{ .Values.app.annotations | toYaml | indent 4 }}
  {{- end }}
spec:
  replicas: 2
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: {{ .Values.app.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.service.name }}
    spec:
      {{- if .Values.iam.service_account_name }}
      serviceAccountName:  {{ .Values.iam.service_account_name }}
      {{ end }}
      terminationGracePeriodSeconds: 30
      containers:
        - image: "{{ .Values.image.url }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          {{ if .Values.app.is_client }}
          volumeMounts:
            - mountPath: /var/cache/nginx
              name: client-nginx-cache
          {{ end }}
          name: {{ .Values.app.service.name }}
          {{- if .Values.app.command }}
          command: {{ .Values.app.command }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.app.pod.port }}
          livenessProbe:
            httpGet:
              path: {{ .Values.app.pod.healthCheckPath }}
              port: {{ .Values.app.pod.port }}
            timeoutSeconds: 10
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: {{ .Values.app.pod.healthCheckPath }}
              port: {{ .Values.app.pod.port }}
            timeoutSeconds: 10
            initialDelaySeconds: 10
            successThreshold: 2
          resources:
            requests:
              memory: {{ .Values.app.resources.requests.memory }}
              cpu: {{ .Values.app.resources.requests.cpu }}
            limits:
              memory: {{ .Values.app.resources.limits.memory }}
              cpu: {{ .Values.app.resources.limits.cpu }}
          envFrom:
            - secretRef:
                name: {{ .Values.app.secretName }}
          {{ if .Values.app.is_client }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          {{ end }}
      restartPolicy: Always
      {{ if .Values.app.is_client }}
      volumes:
        - name: client-nginx-cache
          emptyDir: { }
      {{ end }}
status: { }
